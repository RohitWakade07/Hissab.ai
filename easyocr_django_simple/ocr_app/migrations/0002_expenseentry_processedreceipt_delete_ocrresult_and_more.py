# Generated by Django 5.2.7 on 2025-10-04 09:11

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ocr_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpenseEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, help_text='Expense date', null=True)),
                ('time', models.TimeField(blank=True, help_text='Expense time', null=True)),
                ('payer_name', models.CharField(blank=True, help_text='Person who paid', max_length=255, null=True)),
                ('receiver_name', models.CharField(blank=True, help_text='Vendor/merchant name', max_length=255, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, help_text='Expense amount', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(blank=True, default='INR', help_text='Currency code (e.g., INR, USD)', max_length=3, null=True)),
                ('type_of_expense', models.CharField(blank=True, choices=[('travel', 'Travel'), ('meals', 'Meals'), ('accommodation', 'Accommodation'), ('transport', 'Transport'), ('office_supplies', 'Office Supplies'), ('utilities', 'Utilities'), ('other', 'Other')], help_text='Category of expense', max_length=100, null=True)),
                ('mode_of_payment', models.CharField(blank=True, choices=[('cash', 'Cash'), ('card', 'Card'), ('upi', 'UPI'), ('net_banking', 'Net Banking'), ('cheque', 'Cheque'), ('other', 'Other')], help_text='Payment method used', max_length=100, null=True)),
                ('money_used_for', models.TextField(blank=True, help_text='Description of expense', null=True)),
                ('receipt_number', models.CharField(blank=True, help_text='Receipt/invoice number', max_length=255, null=True)),
                ('gst_no', models.CharField(blank=True, help_text='GST number', max_length=255, null=True)),
                ('upi_transaction_id', models.CharField(blank=True, help_text='UPI transaction ID', max_length=255, null=True)),
                ('is_reimbursable', models.BooleanField(default=True, help_text='Whether this expense is reimbursable')),
                ('project_code', models.CharField(blank=True, help_text='Project code if applicable', max_length=100, null=True)),
                ('location', models.CharField(blank=True, help_text='Location where expense occurred', max_length=255, null=True)),
                ('travel_mode', models.CharField(blank=True, choices=[('flight', 'Flight'), ('train', 'Train'), ('bus', 'Bus'), ('taxi', 'Taxi'), ('car_rental', 'Car Rental'), ('personal_vehicle', 'Personal Vehicle'), ('other', 'Other')], help_text='Mode of travel', max_length=100, null=True)),
                ('travel_start_date', models.DateField(blank=True, help_text='Travel start date', null=True)),
                ('travel_end_date', models.DateField(blank=True, help_text='Travel end date', null=True)),
                ('travel_origin', models.CharField(blank=True, help_text='Travel origin', max_length=255, null=True)),
                ('travel_destination', models.CharField(blank=True, help_text='Travel destination', max_length=255, null=True)),
                ('flight_number', models.CharField(blank=True, help_text='Flight number', max_length=50, null=True)),
                ('train_number', models.CharField(blank=True, help_text='Train number', max_length=50, null=True)),
                ('airline', models.CharField(blank=True, help_text='Airline name', max_length=100, null=True)),
                ('train_company', models.CharField(blank=True, help_text='Train company', max_length=100, null=True)),
                ('ticket_number', models.CharField(blank=True, help_text='Ticket number', max_length=255, null=True)),
                ('lodging_name', models.CharField(blank=True, help_text='Hotel/lodging name', max_length=255, null=True)),
                ('lodging_check_in', models.DateField(blank=True, help_text='Check-in date', null=True)),
                ('lodging_check_out', models.DateField(blank=True, help_text='Check-out date', null=True)),
                ('rental_car_company', models.CharField(blank=True, help_text='Car rental company', max_length=255, null=True)),
                ('rental_car_pickup', models.TextField(blank=True, help_text='Car pickup location', null=True)),
                ('rental_car_dropoff', models.TextField(blank=True, help_text='Car dropoff location', null=True)),
                ('mileage', models.FloatField(blank=True, help_text='Mileage in kilometers', null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('reason_for_travel', models.TextField(blank=True, help_text='Purpose of travel', null=True)),
                ('uploaded_by_employee_id', models.CharField(blank=True, help_text='Employee ID who uploaded the receipt', max_length=255, null=True)),
                ('processed_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Expense Entry',
                'verbose_name_plural': 'Expense Entries',
                'ordering': ['-processed_at'],
            },
        ),
        migrations.CreateModel(
            name='ProcessedReceipt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_ocr_text', models.TextField(help_text='Raw OCR text extracted from the receipt')),
                ('receipt_image', models.ImageField(blank=True, help_text='Uploaded receipt image', null=True, upload_to='receipt_images/%Y/%m/%d/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('processed', 'Processed'), ('error', 'Error'), ('failed', 'Failed')], default='pending', help_text='Current processing status', max_length=50)),
                ('llm_output_raw', models.TextField(blank=True, help_text='Raw LLM response before parsing', null=True)),
                ('llm_error_message', models.TextField(blank=True, help_text='Error message if processing failed', null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_time_seconds', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Processed Receipt',
                'verbose_name_plural': 'Processed Receipts',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.DeleteModel(
            name='OCRResult',
        ),
        migrations.AddField(
            model_name='expenseentry',
            name='receipt',
            field=models.OneToOneField(blank=True, help_text='Associated processed receipt', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expense_entry', to='ocr_app.processedreceipt'),
        ),
    ]
